{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,sBCAAC,EAAAD,EAAA,uCDMA,MAAME,EAAaC,SAASC,eAAe,UACrCC,EAAiBF,SAASC,eAAe,YACzCE,EAAcH,SAASC,eAAe,SAGtCG,GAFcJ,SAASC,eAAe,YACxBD,SAASC,eAAe,UACzBD,SAASC,eAAe,eAI3C,IAAII,EACAC,EAAW,GACXC,EAAO,GAGXC,eAAeC,IAEX,MAAMC,QCpBVF,eAA2BG,GACvB,MAAMC,EAAgBd,EAAAe,WAAWF,EAAI,YAErC,IACI,MANRG,KAMgBA,SAAehB,EAAAiB,QAAQH,GAS/B,OARiBE,EAAKE,KAAKC,IACvBC,QAAQC,IAAIF,GACL,IACAA,EAAIG,OACPC,GAAIJ,EAAII,OAKlB,MAAOC,GACLJ,QAAQC,IAAIG,IDKeC,CAAY3B,EAAAe,IAC3CZ,EAAWyB,UAAY,GACvBd,EAAiBe,SAAQC,IACrBC,EAAcD,MAElBpB,EAAWI,EAIf,SAASiB,EAAcC,GAEnB,MAAMF,EAAU1B,SAAS6B,cAAc,KACvCH,EAAQI,UAAY,UAEpBJ,EAAQK,aAAa,OAAQ,qBAAqBH,EAAKP,MACvD,MAAMW,EAAaJ,EAAKK,IAAIC,OAASN,EAAKK,IAAI,GAAK,sGAG7CE,EADuB5B,EAAK6B,MAAMC,GAAgBA,EAAYhB,KAAOO,EAAKP,KAE5E,mEAAkE,0DAIrEK,EAAOF,UAAY,iEAGAQ,6EACmBJ,EAAKU,0DACFC,EAAAC,eAAeZ,EAAKa,UAAUb,EAAKc,gCACnEP,oBAGVpC,EAAW4C,YAAYjB,GAEvB,MAAMkB,EAAoBlB,EAAQmB,cAAc,iBAGhDD,EAAkBE,iBAAiB,SAAStC,MAAOc,IAC/CA,EAAEyB,iBAEFxC,EAAKyC,KAAKpB,GACVW,EAAAU,iBAAiB1C,GAEbF,SACM6C,EAAAC,mBAAmBvD,EAAAe,GAAIN,EAAW+C,IAAK7C,GAGjDqC,EAAkBb,aAAa,YAAY,GAC3Ca,EAAkBS,UAAY,sBAOtC,SAASC,IACL,MAAMC,EAAcrD,EAAesD,MAC7BC,EAAWtD,EAAYqD,MAG7B,IAAIE,EAAmB,GAInBA,EADgB,KAAhBH,EACmBjD,EAASqD,QAAQjC,GAAYA,EAAQkC,WAAaL,IAElDjD,EAGN,QAAbmD,IACAC,EAAmBA,EAAiBG,MAAK,CAACC,EAAGC,IAAMA,EAAEtB,MAAQqB,EAAErB,SAGlD,SAAbgB,IACAC,EAAmBA,EAAiBG,MAAK,CAACC,EAAGC,IAAMD,EAAErB,MAAQsB,EAAEtB,SAGnE1C,EAAWyB,UAAY,GACvBkC,EAAiBjC,SAAQC,IACrBC,EAAcD,MAItBxB,EAAe4C,iBAAiB,UAAUxB,IACtCgC,OAGJnD,EAAY2C,iBAAiB,UAAUxB,IACnCgC,OAKJU,EAAAC,mBAAmBrE,EAAAsE,MAAM1D,MAAO2D,IACxBA,GAEA9D,EAAa8D,EACb5D,QAAa2C,EAAAkB,gBAAgBxE,EAAAe,GAAIN,EAAW+C,MAG5C7C,EAAOgC,EAAA8B,iBAIX5D,OAKJL,EAAW0C,iBAAiB,SAAUxB,IAClCgD,OAAOC,SAASC,KAAM","sources":["src/index.js","src/functions/allProducts.js"],"sourcesContent":["import { db, auth } from \"../src/functions/app\";\nimport { onAuthStateChanged, getAuth } from \"firebase/auth\";\nimport { getProducts } from \"../src/functions/allProducts\";\nimport { getFirebaseCart, createFirebaseCart } from \"../src/functions/cart\"\nimport { addProductToCart, getMyLocalCart, currencyFormat } from \"../utils\"\n\nconst shopBakery = document.getElementById(\"bakery\");\nconst categoryFilter = document.getElementById(\"category\");\nconst orderFilter = document.getElementById(\"order\");\nconst veganFilter = document.getElementById(\"veganism\");\nconst sugarFilter = document.getElementById(\"sugars\");\nconst btnCustome = document.getElementById(\"customeBtn\");\n\n\n\nlet userLogged = undefined;\nlet products = [];\nlet cart = [];\n\n\nasync function loadProducts() {\n\n    const firebaseProducts = await getProducts(db);\n    shopBakery.innerHTML = \"\";\n    firebaseProducts.forEach(product => {\n        renderProduct(product);\n    });\n    products = firebaseProducts;\n}\n\n\nfunction renderProduct(item) {\n\n    const product = document.createElement(\"a\");\n    product.className = \"product\";\n\n    product.setAttribute(\"href\", `./product.html?id=${item.id}`);\n    const coverImage = item.img.length ? item.img[0] : \"https://cdn.dribbble.com/users/55871/screenshots/2158022/media/95f08ed3812af28b93fa534fb5d277b3.jpg\";\n\n    const isProductAddedToCart = cart.some((productCart) => productCart.id === item.id);\n    const productButtonCart = isProductAddedToCart ?\n        '<button class=\"product_cart\" disabled>Producto añadido</button >' :\n        '<button class=\"product_cart\">Añadir al carrito</button>';\n\n\n    product.innerHTML = `\n    \n        <div class=\"dessert\"> \n            <img src=\"${coverImage}\" alt=\"\" class=\"dessert__img\">\n            <h3 class=\"dessert__caption\">${item.name}</h3>\n            <p class=\"dessert__description\">${currencyFormat(item.price)} ${item.description}</p>\n            ${productButtonCart}\n        </div>`;\n\n    shopBakery.appendChild(product);\n\n    const productCartButton = product.querySelector(\".product_cart\");\n\n\n    productCartButton.addEventListener(\"click\", async (e) => {\n        e.preventDefault();\n\n        cart.push(item);\n        addProductToCart(cart);\n\n        if (userLogged) {\n            await createFirebaseCart(db, userLogged.uid, cart);\n        }\n\n        productCartButton.setAttribute(\"disabled\", true);\n        productCartButton.innerText = \"Producto añadido\";\n\n    });\n\n}\n\n\nfunction filterBy() {\n    const newCategory = categoryFilter.value;\n    const newOrder = orderFilter.value;\n    //const newVegan= veganFilter.value;\n\n    let filteredProducts = [];\n\n\n    if (newCategory !== \"\") {\n        filteredProducts = products.filter((product) => product.category === newCategory);\n    } else {\n        filteredProducts = products;\n    }\n\n    if (newOrder === \"asc\") {\n        filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\n    }\n\n    if (newOrder === \"desc\") {\n        filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\n    }\n\n    shopBakery.innerHTML = \"\";\n    filteredProducts.forEach(product => {\n        renderProduct(product);\n    });\n}\n\ncategoryFilter.addEventListener(\"change\", e => {\n    filterBy();\n});\n\norderFilter.addEventListener(\"change\", e => {\n    filterBy();\n});\n\n\n//if user is logged\nonAuthStateChanged(auth, async (user) => {\n    if (user) {\n\n        userLogged = user;\n        cart = await getFirebaseCart(db, userLogged.uid);\n\n    } else {\n        cart = getMyLocalCart();\n\n    }\n\n    loadProducts();\n\n});\n\n\nbtnCustome.addEventListener(\"click\", (e) => {\n    window.location.href= \"https://linaperalta.github.io/pascakeP5/index.html\";\n});\n\n\n","import { collection, getDocs } from \"firebase/firestore\";\n\nasync function getProducts(db) {\n    const collectionRef = collection(db, \"products\");\n\n    try {\n        const { docs } = await getDocs(collectionRef);\n        const products = docs.map((doc) => {\n            console.log(doc);\n            return {\n                ...doc.data(),\n                id: doc.id,\n            };\n        });\n\n        return products;\n    } catch (e) {\n        console.log(e);\n    }\n\n}\n\nexport {\n    getProducts\n}"],"names":["$4Bu0d","parcelRequire","$etBjH","$35da740d59af89ba$var$shopBakery","document","getElementById","$35da740d59af89ba$var$categoryFilter","$35da740d59af89ba$var$orderFilter","$35da740d59af89ba$var$btnCustome","$35da740d59af89ba$var$userLogged","$35da740d59af89ba$var$products","$35da740d59af89ba$var$cart","async","$35da740d59af89ba$var$loadProducts","firebaseProducts","db","collectionRef","collection","docs","getDocs","map","doc","console","log","data","id","e","$42e34d117df2caa3$export$68a801b7b3c0bfaa","innerHTML","forEach","product","$35da740d59af89ba$var$renderProduct","item","createElement","className","setAttribute","coverImage","img","length","productButtonCart","some","productCart","name","$aDR0T","currencyFormat","price","description","appendChild","productCartButton","querySelector","addEventListener","preventDefault","push","addProductToCart","$6naOk","createFirebaseCart","uid","innerText","$35da740d59af89ba$var$filterBy","newCategory","value","newOrder","filteredProducts","filter","category","sort","a","b","$1tHc5","onAuthStateChanged","auth","user","getFirebaseCart","getMyLocalCart","window","location","href"],"version":3,"file":"index.4295364f.js.map"}